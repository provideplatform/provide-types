// Code generated by tygo. DO NOT EDIT.

//////////
// source: models.go



export const ProtocolMessageOpcodeBaseline = "BLINE";
export const ProtocolMessageOpcodeJoin = "JOIN";
export const ProtocolMessageOpcodeSync = "SYNC";
/**
 * BaselineContext represents a collection of BaselineRecord instances in the context of a workflow
 */
export interface BaselineContext {
  id?: string /* uuid */;
  baseline_id?: string /* uuid */;
  records?: (BaselineRecord | undefined)[];
  workflow_id?: string /* uuid */;
}
/**
 * BaselineRecord represents a link between an object in the internal system of record
 * and the external BaselineContext
 */
export interface BaselineRecord {
  id?: string;
  baseline_id?: string /* uuid */;
  context_id?: string /* uuid */;
  type?: string;
}
/**
 * Config represents the instance configuration
 */
export interface Config {
  counterparties?: (Participant | undefined)[];
  env?: { [key: string]: string};
  errors?: (any /* api.Error */ | undefined)[];
  network_id?: string /* uuid */;
  organization_address?: string;
  organization_id?: string /* uuid */;
  workgroup_id?: string /* uuid */;
  organization_refresh_token?: string;
  registry_contract_address?: string;
}
/**
 * IssueVerifiableCredentialRequest represents a request to issue a verifiable credential
 */
export interface IssueVerifiableCredentialRequest {
  address?: string;
  organization_id?: string /* uuid */;
  public_key?: string;
  signature?: string;
}
/**
 * IssueVerifiableCredentialResponse represents a response to a VC issuance request
 */
export interface IssueVerifiableCredentialResponse {
  credential?: string;
}
/**
 * Mapping for arbitrary model transformations
 */
export interface Mapping {
  models: (MappingModel | undefined)[];
  name: string;
  description?: string;
  type?: string;
}
/**
 * MappingField for mapping
 */
export interface MappingField {
  default_value?: any;
  is_primary_key: boolean;
  name: string;
  description?: string;
  type: string;
}
/**
 * MappingModel consists of fields for mapping
 */
export interface MappingModel {
  description?: string;
  fields: (MappingField | undefined)[];
  primary_key?: string;
  standard?: string;
  type?: string;
}
/**
 * Message is a proxy-internal wrapper for protocol message handling
 */
export interface Message {
  id?: string;
  baseline_id?: string /* uuid */; // optional; when included, can be used to map outbound message just-in-time
  errors?: (any /* api.Error */ | undefined)[];
  message_id?: string;
  payload?: any;
  protocol_message?: ProtocolMessage;
  recipients: (Participant | undefined)[];
  status?: string;
  type?: string;
}
/**
 * Participant is a party to a baseline workgroup or workflow context
 */
export interface Participant {
  address?: string;
  metadata?: { [key: string]: any};
  api_endpoint?: string;
  messaging_endpoint?: string;
  websocket_endpoint?: string;
}
/**
 * ProtocolMessage is a baseline protocol message
 * see https://github.com/ethereum-oasis/baseline/blob/master/core/types/src/protocol.ts
 */
export interface ProtocolMessage {
  baseline_id?: string /* uuid */;
  opcode?: string;
  sender?: string;
  recipient?: string;
  shield?: string;
  identifier?: string /* uuid */;
  signature?: string;
  type?: string;
  payload?: ProtocolMessagePayload;
}
/**
 * ProtocolMessagePayload is a baseline protocol message payload
 */
export interface ProtocolMessagePayload {
  object?: { [key: string]: any};
  proof?: string;
  type?: string;
  witness?: any;
}
/**
 * PublicWorkgroupInvitationRequest represents parameters for an anonymous request to a public workgroup
 */
export interface PublicWorkgroupInvitationRequest {
  email?: string;
  first_name?: string;
  last_name?: string;
  organization_name?: string;
}
/**
 * SubjectAccount is a baseline BPI Subject Account per the specification
 */
export interface SubjectAccount {
  subject_id?: string;
  type?: string;
  vault_id?: string /* uuid */;
  credentials?: any /* json.RawMessage */;
  credentials_secret_id?: string /* uuid */;
  metadata?: SubjectAccountMetadata;
  metadata_secret_id?: string /* uuid */;
  recovery_policy?: any /* json.RawMessage */;
  recovery_policy_secret_id?: string /* uuid */;
  role?: any /* json.RawMessage */;
  role_secret_id?: string /* uuid */;
  security_policies?: any /* json.RawMessage */;
  security_policies_secret_id?: string /* uuid */;
}
/**
 * SubjectAccountMetadata is `SubjectAccount` metadata specific to this BPI instance
 */
export interface SubjectAccountMetadata {
  /**
   * Counterparties are the default counterparties
   */
  counterparties?: (Participant | undefined)[];
  /**
   * NetworkID is the baseline network id
   */
  network_id?: string;
  /**
   * OrganizationAddress is the baseline organization address
   */
  organization_address?: string;
  /**
   * OrganizationDomain is the baseline organization domain
   */
  organization_domain?: string;
  /**
   * OrganizationID is the id of the org
   */
  organization_id?: string;
  /**
   * OrganizationMessagingEndpoint is the public organziation messaging endpoint
   */
  organization_messaging_endpoint?: string;
  /**
   * OrganizationProxyEndpoint is the configured endpoint for the baseline proxy REST API
   */
  organization_proxy_endpoint?: string;
  /**
   * OrganizationRefreshToken is the refresh token for the org
   */
  organization_refresh_token?: string;
  /**
   * OrganizationWebsocketEndpoint is the configured endpoint for the baseline websocket
   */
  organization_websocket_endpoint?: string;
  /**
   * RegistryContractAddress is a contract address
   */
  registry_contract_address?: string;
  /**
   * SOR contains one or more systems of record configurations
   */
  sor?: { [key: string]: any};
  /**
   * WorkgroupID is the id of the workgroup
   */
  workgroup_id?: string;
}
/**
 * Workgroup is a baseline workgroup context
 */
export interface Workgroup {
  participants?: (Participant | undefined)[];
  shield?: string;
  workflows?: (Workflow | undefined)[];
  privacy_policy: any; // outlines data visibility rules for each participant
  security_policy: any; // consists of authentication and authorization rules for the workgroup participants
  tokenization_policy: any; // consists of policies governing tokenization of workflow outputs
}
/**
 * Workflow is a baseline workflow prototype
 */
export interface Workflow {
  deployed_at?: string /* RFC3339 */;
  metadata?: any /* json.RawMessage */;
  participants: (Participant | undefined)[];
  shield?: string;
  status?: string;
  version?: string;
  worksteps?: (Workstep | undefined)[];
}
/**
 * WorkflowInstance is a baseline workflow instance
 */
export interface WorkflowInstance {
  workflow_id?: string /* uuid */; // references the workflow prototype identifier
  worksteps?: (WorkstepInstance | undefined)[];
}
/**
 * Workstep is a baseline workstep context
 */
export interface Workstep {
  name?: string;
  cardinality: number /* int */;
  deployed_at?: string /* RFC3339 */;
  metadata?: any /* json.RawMessage */;
  prover?: any /* privacy.Prover */;
  prover_id?: string /* uuid */;
  participants?: (Participant | undefined)[];
  require_finality: boolean;
  shield?: string;
  status?: string;
  workflow_id?: string /* uuid */;
}
/**
 * WorkstepInstance is a baseline workstep instance
 */
export interface WorkstepInstance {
  workstep_id?: string /* uuid */; // references the workstep prototype identifier
}
